import useBaseUrl from '@docusaurus/useBaseUrl';
import ThemedImage from '@theme/ThemedImage';
import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

# Cours 11

## Le stockage en virtualisation üíæ

Contrairement √† un ordinateur physique o√π vous avez un disque dur, dans Proxmox vous devez :

1. **D√©cider o√π** stocker vos VMs (quel disque physique ?)
2. **Choisir comment** les stocker (quel format ?)
3. **G√©rer l'espace** entre plusieurs VMs
4. **Pr√©voir les sauvegardes** et les snapshots
5. **Optimiser les performances** selon vos besoins

√Ä la fin de ce cours, vous saurez :
- **Comprendre** les diff√©rentes options de stockage
- **Choisir** la solution adapt√©e √† vos besoins
- **Configurer** le stockage correctement
- **R√©soudre** les probl√®mes courants

## LVM - *Logical Volume Manager*

Par d√©faut, Proxmox utilise la technologie `LVM` pour l'ensemble de ses stockages. `LVM` est une couche d'abstraction logicielle que l'on applique par dessus la configuration **r√©guli√®re** des disques durs. Sans `LVM`, une configuration avec deux disques dur pourraient ressembler √† ceci:

<div style={{textAlign: 'center'}}>
    <ThemedImage
        alt="Sch√©ma"
        sources={{
            light: useBaseUrl('/img/Virtu/disques_W.svg'),
            dark: useBaseUrl('/img/Virtu/disques_D.svg'),
        }}
    />
</div>

Avec `LVM`, on pourrait red√©couper le tout, sans se soucier des disques ou m√™me des partitions:

<div style={{textAlign: 'center'}}>
    <ThemedImage
        alt="Sch√©ma"
        sources={{
            light: useBaseUrl('/img/Virtu/LVM_W.svg'),
            dark: useBaseUrl('/img/Virtu/LVM_D.svg'),
        }}
    />
</div>

Dans une architecture `LVM`, les disques physiques sont appel√©s des **PV** (*Physical Volume*). Un regroupement de disques se nomme un **VG** (*Volume Group*). Attention, un **VG** n'est pas obligatoirement l'h√¥te de plusieurs disques durs. En effet, un **VG** peut contenir un seul disque. Les **LV** (*Logical Volume*), constituent les emplacements disponibles pour utilisation.

Le probl√®me avec la technologie `LVM` standard, c'est qu'elle ne supporte que le *Thick Provisionning*. Autrement dit, si vous d√©sirez octroyer un disque dur virtuel de 500Go √† une machinve virtuelle, il vous faudra bloquer 500Go d'espace disque physique. Ce n'est pas tr√®s pratique et encore moins optimal lorsqu'on parle d'environnement virtuel.

## LVM - *Thin*

Voil√†! La technologie *LVM-Thin* vient r√©pondre √† ce besoin, tout simplement √† l'aide d'un *pool* de stockage partag√©. Avec cette m√©thode, nous sommes capable de faire de l'allocation d'espace √† la demande (*Thin-Provisionning*) et m√™me de l'*over-provisionning*.

<div style={{textAlign: 'center'}}>
    <ThemedImage
        alt="Sch√©ma"
        sources={{
            light: useBaseUrl('/img/Virtu/LVM-Thin_W.svg'),
            dark: useBaseUrl('/img/Virtu/LVM-Thin_D.svg'),
        }}
    />
</div>

Dans le sch√©ma ci-dessus, vous remarquerez que le serveur Proxmox est √©quip√© de deux disques durs de 500Go. Or, 700Go ont √©t√© allou√©s au total aux diff√©rentes machines virtuelles. <span class="yellow-text">Il sera donc primordial de surveiller l'utilisation de l'espace disque physique pour √©viter des probl√®mes de corruptions et de manque d'espace.</span>

## Configuration par d√©faut

Voici comment est configur√© et d√©coup√© le stockage d'une installation Proxmox standard. Pour l'exemple, prenons un simple disque de 250Go:

<div style={{textAlign: 'center'}}>
    <ThemedImage
        alt="Sch√©ma"
        sources={{
            light: useBaseUrl('/img/Virtu/LVM-Thin-Tech_W.svg'),
            dark: useBaseUrl('/img/Virtu/LVM-Thin-Tech_D.svg'),
        }}
    />
</div>

*Cette configuration est visible depuis l'interface graphique:*
![ConfigDefaut](../Assets/11/ConfigDefaut.png)

### D√©tails techniques ‚öôÔ∏è

- **SDA**: Le disque dur physique
- **SDA *N*** : Les partitions:
    - **SDA1**: BIOS Boot
    - **SDA2**: UEFI Boot
    - **SDA3**: LVM
- **Groupe de volumes**: Un seul groupe de volume(s) pour tout Proxmox.
- **Volumes logiques (standard)**:
    - *Swap*: R√©servoire de d√©bordement (RAM)
    - **/** : Le syst√®me d'explotation de Proxmox
- **Thin pool**:
    - **pve-data_tmeta** : Les m√©tadonn√©es pour les machines virtuelles. En fait, c'est ici qu'on stipulera combien d'espace une machine virtuelle poss√®de virtuellement. Cet espace ne contient que des m√©tadonn√©es, c'est-√†-dire de l'information uniquement. Il n'est pas besoin d'√™tre tr√®s gros.
    - **pve-data_tdata** : C'est le v√©ritable emplacement o√π les donn√©es des machines virtuelles sont stock√©es.

*Dans l'interface graphique, vous pouvez voir en continu l'utilisation r√©el du Thin Pool:*
![ThinProvision](../Assets/11/ThinProvision.png)

### Pourquoi LVM ü§î

Proxmox utilise **LVM (Logical Volume Manager)** pour plusieurs raisons importantes, notamment li√©es √† la flexibilit√©, la gestion des *snapshots* et la performance. Voyons cela en d√©tail:

1. **Gestion des *snapshots* efficaces avec LVM:**<br/>
Lorsque nous cr√©ons un snapshot avec LVM, il utilise un m√©canisme bas√© sur les copy-on-write (COW). Cela signifie que LVM n'√©crit pas directement sur le volume original lors de la modification des donn√©es, mais enregistre uniquement les changements dans un volume de snapshot. Cela permet de conserver une image coh√©rente de l'√©tat du volume au moment du snapshot, sans avoir √† dupliquer l'int√©gralit√© des donn√©es.

2. **Flexibilit√© de gestion:**<br/>
LVM permet une gestion dynamique et flexible des volumes de stockage. Par exemple, il peut:
    - **Redimensionner les volumes √† chaud. (sans √©teindre la vm)**
    - **Fusionner ou fractionner des volumes logiques**

3. **Gestion des volumes d√©di√©s pour chaque VM:**<br/>
Sous Proxmox, chaque machine virtuelle peut √™tre configur√©e avec un volume logique LVM d√©di√©e. Cela assure une isolation compl√®te des donn√©es entre les *VMs*. Nous avons √©galement abord√© toute la notion de *thin provisionning* √† ce sujet.

4. **Simplification du stockage:**<br/>
Dans un environnement de clustering Proxmox (avec plusieurs h√¥tes), LVM permet une gestion centralis√©e des volumes, ce qui facilite la gestion des sauvegardes, des migrations de VM, et du stockage partag√©. De plus, Proxmox permet de configurer des volumes LVM sur un stockage r√©seau via iSCSI. Cela permet de centraliser le stockage et de simplifier l‚Äôextension des ressources de stockage √† mesure que l‚Äôinfrastructure se d√©veloppe.

5. **√âvolutivit√©:**<br/>
Avec LVM, il est beaucoup plus facile d'ajouter des volumes √† mesure que la demande en stockage augmente. LVM nous permet d'ajouter de l'espace en ajoutant simplement un autre disque au groupe de volumes, ce qui rend l'ajout de stockage plus transparent et moins risqu√©.

## Types de contenu üßê

Dans Proxmox, chaque stockage peut accepter certains types de fichiers. Ces types de fichier sont les suivants:

|Contenu|Description|
|------------------|--------------------|
|VM images|Disques durs virtuels des VMs|
|Container templates|Vos mod√®les pour cr√©er des LXC|
|Images ISO|DVD d'installation pour OS|
|Backups|Sauvegardes des *VMs* et des conteneurs.|
|Snippets|Scripts de configurations personnalis√©es|

Pourquoi fait-on cette disctinction entre les diff√©rents types de contenu ? Plusieurs raisons:

1. **Optimisation:** SSD rapide pour les *VMs*, HDD plus lent pour les sauvegardes.
2. **S√©curit√©:** Sauvegardes sur un serveur distant.
3. **Organisation:** ISOs regroup√©s dans un endroit.
4. **Partage:** Plusieurs serveurs Proxmox peuvent partager certains stockage.

## Stockages par d√©faut 

Tous les noeuds Proxmox poss√®dent deux endroits de stockage visibles d√®s l'installation: **Local** et **Local-LVM**.

![locallvm](../Assets/11/locallvm.png)

Ces stockages sont en place pour accueillir diff√©rents √©l√©ments et nous allons voir ensemble pourquoi:

|Stockage|Type|Contenu|Explications|
|-----|-----|----------|-------------|
|**local**|**Dossier**|Sauvegarde, Fichiers ISOs, Mod√®les de conteneur|Ces contenus ne requi√®rent pas d'approvisionnement *Thin*. Un fichier ISO conserve toujours la m√™me taille, de m√™me qu'une sauvegarde ou un mod√®le de conteneur. Inutile donc de stocker ces √©l√©ments dans le *Thin-Pool*. Ce dossier est donc stock√© dans le volume logique contenant le syst√®me d'exploitation Proxmox. Dans le *shell*, vous le retrouverez dans `/var/lib/vz`|
|**local-lvm**|**LVM-Thin**|Disques de machines virtuelles et de conteneurs|√Ä l'inverse, ces contenus n√©cessitent un approvisionnement *Thin*. Nous voulons, par exemple, √™tre en mesure de cr√©er une machine virtuelle qui ¬´ pense ¬ª poss√©der un disque dur de 80Go, mais qui en r√©alit√© n'en a un de 15Go. Ces donn√©es sont conserv√©es dans le *Thin-Pool*.|

## Cr√©ation de stockage ü™Ñ

Vous pouvez √©videmment ajouter des emplacements de stockage suppl√©mentaires dans Proxmox. Selon le niveau o√π vous cr√©erez cet endroit de stockage, Proxmox le traitera diff√©remment:

### Niveau Datacenter üè¨

Les emplacements de stockage cr√©√©s au niveau du *datacenter* seront cr√©√©s syst√©matiquement sur tous les noeuds.

![StorageDatacenter](../Assets/11/StorageDatacenter.png)

Vous reconnaitrez sans doute certains √©l√©ments dont nous avons discut√© ensemble: **LVM, Directory et LVM-Thin**. D'autres vous sont peut-√™tre moins familiers, comme **ZFS et BTRFS**, nous en reparleront un peu plus loin. Remarquez bien les ic√¥nes qui pr√©c√®dent les termes:

üìÅ ‚Üí Un dossier signifie qu'il s'agit d'un stockage local, sur les noeuds directement.

üè¢ ‚Üí Un immeuble signifie qu'il s'agit d'un stockage partag√© sur le r√©seau, ou d'une technologie de stockage avanc√©.

üíæ ‚Üí La disquette est r√©serv√© √† PBS (*Proxmox Backup Server*)

‚òÅÔ∏è ‚Üí Le nuage correspond au serveur ESXi, un hyperviseur de l'entreprise VMware que nous aborderons prochainement.

### Niveau Noeud ü™¢

Au niveau d'un noeud, il est int√©ressant de constater la flexbilit√© qu'apporte une technologie comme `LVM`. √Ä tout moment, vous pouvez simplement ajouter un disque dur, l'int√©grer √† la structure `LVM`, et vous voil√† avec des l'espace suppl√©mentaire pour vos machines virtuelles. Pour ce faire, s√©lectionnez le noeud concern√©, et dirigez vous dans la section *Disks*.

#### Exemple: Ajout d'un disque √† la structure LVM

<span class="fonttaller">**√âtape 1: Initialiser le nouveau disque**</span><br/>
Apr√®s avoir ajout√© le disque dur √† la machine, il faut l'initialiser pour pouvoir l'utiliser

![Init](../Assets/11/Init.png)

<span class="fonttaller">**√âtape 2: Cr√©er une partition**</span><br/>
Malheureusement, pour cette √©tape, nous n'aurons d'autre choix que d'utiliser le terminal. Utilisez donc la commande suivante pour cr√©er une seule partition couvrant la superficie totale (ou presque) du nouveau disque.
```bash
parted /dev/sdb mkpart primary 1024 100% #Le 1024 laisse de l'espace pour la table de partitionnement
```
:::caution
Pour cr√©er la partition, vous aurez besoin d'installer le logiciel de partitionnement `parted`.
:::

<span class="fonttaller">**√âtape 3: Ajouter le disque dur au groupe de volume**</span><br/>
Encore ici, nous utiliserons le terminal. Nous allons donc √©tendre notre groupe de volume pour inclure le nouveau disque dur comme suit:
```bash
vgextend pve /dev/sdb1
```
√Ä cette √©tape, votre disque devrait apparaitre dans le groupe de volume **PVE**, visible depuis l'interface de Proxmox.
![lvmnewdisk](../Assets/11/lvmnewdisk.png)

<span class="fonttaller">**√âtape 4: √âtendre le *ThinPool***</span><br/>
Rappelez-vous; le *thin pool* contient les donn√©es et les m√©tadonn√©es de nos machines virtuelles. Il nous faudra donc r√©fl√©chir √† l'espace attribuable aux donn√©es et aux m√©tadonn√©es. Si vous voulez vous assurer de ne jamais manquer d'espace, je vous recommande d'attribuer 1% de l'espace de stockage aux m√©tadonn√©es. Autrement dit, si nous ajoutons un disque de 250Go (ce qui est notre cas ici), il serait plus que raisonnable d'ajouter 25Go d'espace √† nos m√©tadonn√©es.

Commen√ßons donc par augmenter l'espace de stockage r√©el. En laissant, 25Go d'espace aux m√©tadonn√©es, il nous reste donc 225Go √† attribuer:
```bash
lvresize -L 225G /dev/pve/data
```

Puis, on augmente l'espace attribu√© aux m√©tadonn√©es:
```bash
lvresize --poolmetadatasize +25GB /dev/pve/data
```

## ZFS

ZFS est un v√©ritable couteau suisse du stockage. Il combine

- Gestionnaire de dsiques (comme LVM)
- Syst√®me de fichiers
- Gestionnaire RAID
- Syst√®me de *snapshots*
- V√©rification d'int√©grit√©
- Compression
- D√©duplication

ZFS a √©t√© mis en place pour r√©pondre aux diff√©rentes probl√©matiques que l'on rencontrait avec les espaces de stockage traditionnels:

|Probl√®me|R√©solution avec ZFS|
|--------|-------------------|
|Corruption de donn√©es|*Checksum* qui d√©tecte automatiquement la corruption de donn√©es|
|*RAID hardware* : Panne du contr√¥leur = perte de tout|*RAID Software* sans contr√¥leur propri√©taire|
|Snapshots lents |Snapshots instantan√©s (similaires √† LVM)|
|Gaspillage d'espace: fichiers similaires stock√©s plusieurs fois|Compression/D√©duplication: √©conomie d'espace|