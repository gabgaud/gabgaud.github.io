import useBaseUrl from '@docusaurus/useBaseUrl';
import ThemedImage from '@theme/ThemedImage';
import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

# Cours 5

## Administration de VMs avanc√©e

### Introduction √† l'administration avanc√©e des VMs ‚öôÔ∏è

Proxmox stocke toutes les configurations de VMs dans un r√©pertoire centralis√©: `/etc/pve/qemu-server/`

image ici

- Chaque fichier `.conf` correspond √† une *VM* identifi√©e par son VMID (VM ID)
- Ces fichiers contiennent toute la configuration : CPU, M√©moire, disques, r√©seau, etc.
- Le r√©pertoire `/etc/pve` est synchronis√© automatiquement entre tous les noeuds du cluster.
- Les modifications sont propag√©es en temps r√©el √† tous les noeuds.

**<span class="green-text fonttaller">Exemple d'une partie d'un fichier de configuration d'une VM:</span>**

![VmConf](../Assets/05/VmConf.png)

Si vous observez attentivement l'image ci-dessus üëÜ, vous reconnaitrez sans doute quelques √©l√©ments:

- `bios: ovmf` : Firmware de type **UEFI**
- `balloon: 4096` : Quantit√© minimal de m√©moire √† laisser √† la *VM* en cas de *ballooning*
- `cpu: host` : Type de CPU de la *VM*
- etc.

### Commandes qm <FAIcon icon="fa-solid fa-terminal"/>

**<span class="green-text fonttaller">Introduction √† qm</span>**

La commande `qm` (QEMU Manager) est l'outil principal pour g√©rer les machines virtuelles dans Proxmox. Elle communique directement avec le syst√®me de virtualisation QEMU/KVM.

**Syntaxe g√©n√©rale:**

```bash
qm <commande> <VMID> [options]
```

#### Listage d'informations

Lister les *VMs* avec `qm list`

```bash
#Commande permettant de lister les machines virtuelles
qm list
```