import useBaseUrl from '@docusaurus/useBaseUrl';
import ThemedImage from '@theme/ThemedImage';
import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

# Cours 6

## Sauvegardes et restaurations üíæ

Les sauvegardes constituent un √©l√©ment fondamental de tout d√©ploiement informatique s√©rieux. Dans l'environnement de virtualisation Proxmox VE, la sauvegarde devient encore plus critique car elle prot√®ge non seulement les donn√©es, mais √©galement l'infrastructure virtuelle compl√®te.

<span class="green-text fonttaller">**Pourquoi sauvegarder dans un environnement virtualis√© ?**</span><br/><br/>

- Protection contre les pannes mat√©rielles du serveur h√¥te
- R√©cup√©ration rapide apr√®s une corruption de donn√©es
- Migration vers de nouveaux √©quipements
- Tests et d√©veloppement sur des copies exactes de production
- Conformit√© aux politiques de s√©curit√© informatique

### Caract√©ristiques du syst√®me de sauvegarde Proxmox VE

Proxmox VE offre une solution de sauvegarde compl√®tement int√©gr√©e qui pr√©sente plusieurs avantages distinctifs :

<span class="green-text fonttaller">**Sauvegardes compl√®tes uniquement:**</span><br/><br/>

- Chaque sauvegarde contient l'int√©gralit√© de la machine virtuelle ou du conteneur
- Inclut automatiquement la configuration de la VM/CT et toutes les donn√©es
- Pas de gestion complexe de sauvegardes incr√©mentales ou diff√©rentielles
- Simplicit√© de restauration : une seule archive suffit

<span class="green-text fonttaller">**Int√©gration native:**</span><br/><br/>

- Utilise les capacit√©s sp√©cifiques de chaque type de stockage
- S'adapte aux diff√©rents types de syst√®mes invit√©s (VM et conteneurs)
- Interface graphique et ligne de commande disponibles
- Gestion centralis√©e depuis l'interface web

## Architecture et stockage des sauvegardes

### Types de stockage pour les sauvegardes

Avant de pouvoir effectuer une sauvegarde, il est imp√©ratif de configurer un stockage de sauvegarde. Proxmox VE supporte deux approches principales :

#### Proxmox Backup Server 

Le Proxmox Backup Server repr√©sente la solution la plus avanc√©e :

<span class="green-text">**Avantages techniques:**</span><br/><br/>

- **D√©duplication de donn√©es :** Les blocs identiques ne sont stock√©s qu'une seule fois, √©conomisant consid√©rablement l'espace
- **Stockage des m√©tadonn√©es :** Les informations de structure sont s√©par√©es des donn√©es
- **Chiffrement c√¥t√© client :** S√©curit√© maximale des donn√©es sauvegard√©es
- **V√©rification d'int√©grit√© :** Contr√¥les automatiques de l'int√©grit√© des sauvegardes

<span class="green-text">**Mise en oeuvre recommand√©e:**</span><br/><br/>

- D√©ploiement sur un serveur d√©di√© pour optimiser les performances
- R√©seau haute vitesse entre Proxmox VE et le Backup Server
- Stockage local rapide sur le serveur de sauvegarde

#### Stockage de niveau fichier

Alternative plus simple utilisant des syst√®mes de fichiers classiques :

<span class="green-text">**Options disponibles:**</span><br/><br/>

- **NFS :** Solution r√©seau √©prouv√©e, facile √† mettre en ≈ìuvre
- **SMB/CIFS :** Compatible avec les environnements Windows
- **Stockage local :** Performance maximale mais pas de protection contre les pannes du serveur

<span class="green-text">**Consid√©rations pratiques:**</span><br/><br/>

- Les sauvegardes sont stock√©es comme des fichiers r√©guliers
- Possibilit√© de copie vers bande magn√©tique pour archivage hors site
- Gestion manuelle de l'espace disque n√©cessaire

### Nomenclature des fichiers de sauvegarde

Proxmox VE utilise une convention de nommage standardis√©e qui encode des informations importantes :

<span class="green-text">**Format standard:**</span><br/><br/>

```
vzdump-[type]-[vmid]-[date]-[heure].[extension]
```

<span class="green-text">**Exemple concret:**</span><br/><br/>

```
vzdump-lxc-105-2025_09_08-10_47_09.tar.gz
```

- `lxc`: Type de syst√®me (conteneur Linux)
- `105`: Identifiant num√©rique de la VM/conteneur
- `2025_09_08`: Date de cr√©ation (8 septembre 2025)
- `10_47_09`: Heure de cr√©ation (10:47:09)
- `.tar.gz`: Format et compression utilis√©s

<span class="green-text">**Avantages de cette nomenclature:**</span><br/><br/>
- Stockage multiple dans le m√™me r√©pertoire
- Identification rapide du contenu
- Tri chronologique automatique
- Compatibilit√© avec les scripts d'automatisation

### Modes de sauvegarde - Concepts fondamentaux

Le choix du mode de sauvegarde repr√©sente un compromis entre la coh√©rence des donn√©es et le temps d'arr√™t du service. Proxmox VE propose trois modes principaux, chacun adapt√© √† des besoins sp√©cifiques.

#### Mode STOP (arr√™t) üõë

<span class="green-text fonttaller">**Pour les *VMs*:**</span><br/><br/>

1. Arr√™t propre : La VM re√ßoit un signal d'extinction normale
2. Processus QEMU de sauvegarde : Un processus d√©di√© lit les disques virtuels
3. Red√©marrage : La VM red√©marre automatiquement apr√®s le d√©but de la sauvegarde
4. Sauvegarde en arri√®re-plan : Utilise les capacit√©s de sauvegarde live de QEMU
<br/>

|**Avantages**|**Inconv√©nients**|
|-------------|-----------------|
|**Coh√©rence maximale:** Aucune √©criture pendant la lecture des donn√©es| **Temps d'arr√™t:** Service indisponible pendant l'arr√™t et le red√©marrage|
|**Fiabilit√© absolue:** Pas de risque d'incoh√©rence des donn√©es| **Dur√©e variable:** D√©pend de la taille des donn√©es et de la vitesse du stockage|
|**Simplicit√©:** Processus lin√©aire et pr√©visible||

**Cas d'usage recommand√©s:**
- Serveurs de base de donn√©es critiques
- Sauvegardes de maintenance programm√©es
- Lorsque les donn√©es priment

<span class="green-text fonttaller">**Pour les conteneurs LXC:**</span><br/><br/>

- Arr√™t complet du conteneur pendant toute la dur√©e de la sauvegarde
- Temps d'arr√™t potentiellement tr√®s long selon la taille des donn√©es
- Recommand√© uniquement pour les petits conteneurs ou les maintenances

#### Mode SUSPEND (Suspension) ‚è∏Ô∏è

<span class="green-text fonttaller">**Pour les *VMs*:**</span><br/><br/>

:::important
Ce mode est maintenu pour compatibilit√©, mais le mode snapshot est g√©n√©ralement pr√©f√©rable car il offre une meilleure performance avec une coh√©rence similaire.
:::

<span class="green-text fonttaller">**Pour les conteneurs LXC:**</span><br/><br/>

**Processus en trois √©tapes :**

1. **Premi√®re copie rsync :**
    - Copie des donn√©es vers un r√©pertoire temporaire
    - Le conteneur continue de fonctionner normalement
    - Capture la majorit√© des donn√©es

2. **Suspension et synchronisation :**
    - Arr√™t temporaire du conteneur
    - Deuxi√®me rsync pour capturer les modifications
    - Temps d'arr√™t minimal gr√¢ce √† la pr√©-copie

3. **Reprise et archivage :**
    - Red√©marrage imm√©diat du conteneur
    - Cr√©ation de l'archive finale en arri√®re-plan

|**Avantages**|**Inconv√©nients**|
|-------------|-----------------|
|**Temps d'arr√™t minimal:** Seulement pour la synchronisation finale| **Espace temporaire requis:** Besoin d'un espace suppl√©mentaire pour la copie|
|**Coh√©rence:** Capture un √©tat coh√©rent du syst√®me de fichiers| **Performance r√©seau m√©diocre:** Pour les stockages NFS/CIFS |

#### Mode SNAPSHOT (Instantan√©) üì∏

Le mode snapshot repr√©sente le meilleur compromis pour la plupart des cas d'usage en production. Imaginez que vous photographiez un paysage depuis une voiture en mouvement. Le mode snapshot fait exactement cela : il "photographie" les donn√©es d'une VM pendant qu'elle continue de fonctionner.

<span class="green-text fonttaller">**Pour les *VMs* :**</span><br/><br/>

**Comment √ßa fonctionne concr√®tement:**

**√âtape 1: Installation du surveillant**
- La *VM* fonctionne normalement. 
- QEMU installe un ¬´ intercepteur ¬ª qui surveille tous les disques.
- La *VM* ne remarque rien et continue son travail.

**√âtape 2: Processus de copie intelligent**
- Le processus de sauvegarde d√©marre et commence √† lire le disque
- La VM continue d'√©crire sur le disque en m√™me temps !
- **Solution :** quand la VM veut √©crire sur une zone pas encore copi√©e, l'intercepteur dit "STOP ! Je copie d'abord l'ancienne version"
- Une fois l'ancienne version copi√©e, la VM peut √©crire la nouvelle

**R√¥le de l'agent invit√© (optionnel mais recommand√©):**

L'agent **QEMU** permet d'am√©liorer le processus de sauvegarde en mode *snapshopt* en maintenant une communication avec l'hperviseur. Voici le flux des √©tapes d'une sauvegarde dans ce mode avec l'agent **QEMU** install√©:

1. L'agent re√ßoit le signal: ¬´ Pr√©pare-toi pour une sauvegarde ¬ª.
2. L'agent dit aux applications: ¬´ Videz vos m√©moires caches respectives ¬ª.
3. L'agent g√®le le syst√®me de fichiers (2-3 secondes).
4. La sauvegarde d√©marre avec un √©tat coh√©rent.
5. L'agent d√©g√®le le syst√®me.

:::caution[Avec Windows]
Windows peut avoir plusieurs logiciels qui ¬´ g√®lent ¬ª le syst√®me (antivirus, autres sauvegardes). L'agent QEMU coordonne tout cela pour √©viter les conflits.
:::

<span class="green-text fonttaller">**Pour les conteneurs LXC :**</span><br/><br/>

:::caution
Pour les conteneurs, le mode ¬´ snapshot ¬ª utilise les vraies fonctionnalit√©s de snapshot du syst√®me de stockage. Il s'agit donc d'un v√©ritable *snapshot* et non pas d'une sauvegarde de type *snapshot*. 

Voir [cette section](../05%20-%205%20-%20Administration%20de%20VMs%20avanc√©e/00-cours5.md#diff√©rencier-snapshots-et-backups-) pour bien distinguer les deux concepts sans ambiguit√©.
:::

## Compression et optimisation üóúÔ∏è

Il est possible (et recommand√©) de compresser les sauvegardes de vos machines virtuelles sous Proxmox. Je vous dresse ici les diff√©rents formats disponibles, ainsi que leurs caract√©ristiques respectives:

|Algorithme|Format|Caract√©ristiques|
|:----------:|:------:|----------------|
|Lempel-Ziv-Oberhumer|LZO|<ul><li>Compression rapide avec faible utilisation CPU</li><li>Ratio de compression mod√©r√©</li><li>Excellent pour les environnements avec CPU limit√©</li><li>Installation par d√©faut sur la plupart des syst√®mes</li></ul>|
|Gzip|GZ|<ul><li>Compression √©prouv√©e bas√©e sur l'algorithme DEFLATE</li><li>Bon √©quilibre compression/performance</li><li>Compatible universellement</li></ul>|
|Pigz|TGZ|<ul><li>Remplacement de gzip</li><li>Utilisation de multiples c≈ìurs CPU</li><li>Acc√©l√©ration significative sur mat√©riel moderne</li></ul>|
|Zstandard|ZST|<ul><li>Le plus rapide des algorithmes sous Proxmox</li><li>Parall√©lisation int√©gr√©e (Multithreading)</li><li>Excellent √©quilibre taille/vitesse</li><li>Adoption croissante dans l'industrie</li></ul>|

## Planification et automatisation ü§ñ

### Cr√©ation de t√¢ches de sauvegarde

Via l'interface graphique: **Datacenter ‚Üí Backup ‚Üí Add**

![BackupJob](../Assets/06/BackupJob.png)

1. Serveur sp√©cifique ou tous les n≈ìuds du cluster
2. Destination des sauvegardes
3. Individuelle, par pool, ou toutes
4. Format calendrier similaire √† systemd

### Options avanc√©es

![BackupAdvOptions](../Assets/06/BackupAdvOptions.png)

#### Bandwith Limit üïõ
Limite l'utilisation de la bande passante I/O ( **<span class="red-text">Attention:</span>** La bande passante I/O n'est pas forc√©mment li√© au r√©seau ). Cela vous permet de ne pas surcharger un stockage partag√© entre sauvegardes et machines virtuelles par exemple. Si vous laissez l'option par d√©faut, il n'y a pas de limite.

#### Zstd Threads ü§π
Il s'agit du nombre de *threads* (coeurs logiques) utilis√©s en parall√®les par l'algorithme de compression Zstandard pendant la sauvegarde. Si vous indiquez `0`, la moiti√© des coeurs logiques seront utilis√©s pour la compression. Par exemple:

**Serveur de 4 coeurs**
```
zstd: 0 ‚Üí Utilise 2 threads (4√∑2)
zstd: 1 ‚Üí Utilise 1 thread
zstd: 4 ‚Üí Utilise 4 threads
```

#### IO-Workers üöß
Un *IO-Worker* est un processus qui lit les donn√©es du disque dur de la VM pendant la sauvegarde. C'est diff√©rent de la compression!

<span class="green-text fonttaller">**Comment √ßa fonctionne:**</span><br/><br/>

**1 Worker (s√©quentiel):**
```
Lit bloc 1 ‚Üí Attend compression ‚Üí Lit bloc 2 ‚Üí Attend compression...

Timeline : |‚ñà‚ñà‚ñà‚ñà|‚ñë‚ñë‚ñë‚ñë|‚ñà‚ñà‚ñà‚ñà|‚ñë‚ñë‚ñë‚ñë|‚ñà‚ñà‚ñà‚ñà|‚ñë‚ñë‚ñë‚ñë|
            Read Wait Read Wait Read Wait
```

**R√©sultat:** Lent car beaucoup d'attente

**4 Workers (parall√®le):**
```
Worker 1 : |‚ñà‚ñà‚ñà‚ñà|    |‚ñà‚ñà‚ñà‚ñà|    |‚ñà‚ñà‚ñà‚ñà|
Worker 2 :      |‚ñà‚ñà‚ñà‚ñà|    |‚ñà‚ñà‚ñà‚ñà|    |‚ñà‚ñà‚ñà‚ñà|
Worker 3 :           |‚ñà‚ñà‚ñà‚ñà|    |‚ñà‚ñà‚ñà‚ñà|    |‚ñà‚ñà‚ñà‚ñà|
Worker 4 :                |‚ñà‚ñà‚ñà‚ñà|    |‚ñà‚ñà‚ñà‚ñà|    |
Timeline : |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà|
```

**R√©sultat:** Plus rapide car lecture continue

:::caution[+ de workers ‚â† + de performances automatiquement]
En regardant les sch√©mas ci-dessus, on aurait tendance √† vouloir mettre la quantit√©e de *workers* au maximum. N√©anmoins, selon les ressources physiques dont vous disposez, cela pourrait √™tre une mauvaise id√©e. Tout d√©pend du type de disque(s) dur(s) que vous avez en place pour la sauvegarde.
:::

**Exemples de configurations possibles:**

|Type de stockage|IO-Workers|Facteurs √† consid√©rer|
|:--------------:|:--------:|---------------------|
|**NVMe / SSD**| 32 | <ul><li>SSD peut g√©rer beaucoup d'acc√®s parall√®les</li><li>Pas de t√™te de lecture physique √† d√©placer</li><li>Latence tr√®s faible</li></ul>|
|**HDD M√©canique**| 4 | <ul><li>T√™te de lecture doit se d√©placer physiquement</li><li>Trop de workers = thrashing (va-et-vient permanent)</li><li>Performance d√©grad√©e avec trop de parall√©lisme</li></ul>|
|**Stockage r√©seau**| 8 | <ul><li>Latence r√©seau</li><li>Bande passante partag√©e</li><li>Capacit√© du stockage distant</li></ul>|

#### *Fleecing* üèéÔ∏è

Imaginez que vous voulez sauvegarder une machine virtuelle pendant qu'elle tourne et offre des services. √âventuellement, la *VM* aura besoin de modifier un fichier sur le disque dur en cour de sauvegarde. L'agent QEMU interviendra alors et mentionne qu'il doit d'abord sauvegarder l'ancienne version. Cette sauvegarde de l'ancienne version peut causer un temps d'attente important, surtout si le stockage est externe et/ou lent. Les utilisateurs auront donc l'impression que leur ordinateur virtuel fonctionne mal et/ou est tr√®s lent.

**La solution ?** <u>Une m√©moire cache interm√©diaire!</u>

Le *fleecing* permet de d√©terminer un stockage tampon qui accueillera les fichiers en sauvegarde rapidement pour les relayer vers un p√©riph√©rique plus lent par la suite.

<div style={{textAlign: 'center'}}>
    <ThemedImage
        alt="Sch√©ma"
        sources={{
            light: useBaseUrl('/img/Virtu/Fleecing_W.svg'),
            dark: useBaseUrl('/img/Virtu/Fleecing_D.svg'),
        }}
    />
</div>

##### Gestion de l'espace en *Fleecing*

Tout comme pour les machines virtuelles, l'espace que vous allou√©e au *fleecing* peut employer une strat√©gie *thin provisionning* ou *thick provisionning*

<span class="green-text fonttaller">**Thin provisionning :**</span><br/>

Rien ne vaut un exemple pour rendre ces concepts un peu plus concrets. Disons que nous avons une machine virtuelle avec un poids de 100Go √† sauvegarder. L'espace de *fleecing* commencera √† 0Go et grandira selon les besoins. Ces besoins varieront en fonction de la vitesse avec laquelle les donn√©es passeont de l'espace de *fleecing* vers le stockage permanent. √âvidemment, l'espace de *fleecing* ne d√©passera jamais la taille de la machine virtuelle √† sauvegarder. Une fois la sauvegarde termin√©, l'espace de *fleecing* utilis√© pourra √™tre r√©cup√©r√© pour le m√™me objectif dans le cas de la sauvegarde d'une autre *VM*.

<span class="green-text fonttaller">**Thick provisionning :**</span><br/>

Dans le cas du *thick provisionning*, c'est assez simple. Si nous avons une machine virtuelle avec un poids de 100Go, cette m√™me valeur sera aussit√¥t r√©serv√©e dans l'espace de *fleecing* et aucune autre machine virtuelle ne pourra y avoir acc√®s.

##### Sc√©narios

- L'entreprise poss√®de une infrastructure virtuelle sous Proxmox.
- Un serveur de base de donn√©es virtuel tourne √† l'int√©rieur de l'hyperviseur (Poids: 500Go).
- Un disque dur NVMe est aussi pr√©sent dans Proxmox pour effectuer du *fleecing*.
- Les sauvegardes sont stock√©s √† distance sur un NAS.

Sans *fleecing* :
```bash
vzdump 100 --storage nas-backup
# R√©sultat : Base de donn√©es tr√®s lente pendant 2h de sauvegarde
# Utilisateurs se plaignent des performances
```
Avec *fleecing* :
```bash
vzdump 100 --fleecing enabled=1,storage=nvme-local --storage nas-backup
# R√©sultat : Base de donn√©es normale, sauvegarde discr√®te
# Utilisateurs ne remarquent rien
```

Ce qui se passe :
1. *VM* √©crit ‚Üí Ancienne donn√©e va sur NVMe local (rapide)
2. *VM* continue normalement
3. En arri√®re-plan : NVMe ‚Üí NAS (sans impact sur la *VM*)
4. Fin sauvegarde : Image de *fleecing* supprim√©e automatiquement

#### *Repeat missed* üîÅ

Une fois activ√©e, cette option indiquera √† Proxmox de r√©essayer une sauvegarde dans le cas ou la sauvegarde initiale aurait √©chou√©e pour une raison ou une autre. Cela √©vite les trous dans la couverture de sauvegarde.

## Gestion de la r√©tention

La r√©tention d√©finie la dur√©e de conservation des sauvegardes selon diff√©rents crit√®res temporels. Proxmox VE offre un syst√®me flexible permettant de s'adapter aux besoins m√©tier.

### Options disponibles

<span class="green-text">**Keep all backups:**</span>
- Conservation de toutes les sauvegardes
- Gestion manuelle de l'espace requis
- Usage temporaire ou environnements de test

<span class="green-text">**Keep Last:**</span>
- Conservation des N derni√®res sauvegardes
- Ind√©pendant de la date de cr√©ation
- Protection contre les sauvegardes multiples avant maintenance

<span class="green-text">**R√©tention temportelle:**</span>
- `keep-hourly` : Derni√®res N heures (une sauvegarde par heure max)
- `keep-daily` : Derniers N jours (une sauvegarde par jour max)
- `keep-weekly` : Derni√®res N semaines (une sauvegarde par semaine max)
- `keep-monthly` : Derniers N mois (une sauvegarde par mois max)
- `keep-yearly` : Derni√®res N ann√©es (une sauvegarde par an max)