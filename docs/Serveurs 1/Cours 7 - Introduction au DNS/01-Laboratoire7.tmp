import useBaseUrl from '@docusaurus/useBaseUrl';
import ThemedImage from '@theme/ThemedImage';
import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

# Laboratoire 7
* * *
## Installation d'un premier serveur DNS

## Pr√©alable(s)

- Avoir compl√©t√© le laboratoire # 6

## Objectif(s)
- Installer et configurer un premier serveur DNS.
- Interroger un serveur DNS.

* * *
## Sch√©ma

<div style={{textAlign: 'center'}}>
    <ThemedImage
        alt="Sch√©ma"
        sources={{
            light: useBaseUrl('/img/Serveurs1/Laboratoire7_W.svg'),
            dark: useBaseUrl('/img/Serveurs1/Laboratoire7_D.svg'),
        }}
    />
</div>

* * *

## √âtapes de r√©alisation

Tel que nous en avons discut√© en classe, le DNS est un syst√®me permettant de traduire les adresses IP en nom, vice-versa. Dans ce laboratoire et les suivants, vous aurez l'occasion d'exp√©rimenter la mise en place de serveurs DNS et d'observer leur comportement dans diff√©rentes situations.

### Mise en place du sch√©ma

Mettez en place le sch√©ma du r√©seau pr√©sent√© ci-dessus. Assurez-vous que le client sous Windows 10 et que le serveur Ubuntu poss√®dent un acc√®s internet via votre passerelle. Au besoin, faites les mises √† jour sur le serveur Ubuntu.

### Configuration de l'adresse IP d'Ubuntu

Dans les cours pr√©c√©dents, nous avons √©tudi√© comment configurer une adresse IP statique sous Ubuntu Server. Comme il s'agit d'un serveur √©galement dans ce laboratoire, assurez-vous de configurer une adresse IP statique au serveur Ubuntu. 

**Recommandation: 192.168.21.10**

### Configuration du nom d'h√¥te d'Ubuntu

Le nom d'h√¥te est tout simplement le nom que l'on donne √† un ordinateur ou un serveur. Par d√©faut, tout ordinateur (sous Windows ou sous Linux) en poss√®de un qui a √©t√© attitr√© √† l'installation. Dans la version serveur d'Ubuntu, on peut retrouver le nom d'h√¥te situ√© apr√®s le caract√®re ¬´ @ ¬ª dans la ligne de commande:

![Nom d'h√¥te](../Assets/07/hostname.png)

Entrez la commande `ping` suivie du nom de votre ordinateur:

<div className="tabsborder">
    <Tabs>
        <TabItem value="Ping-Home" label="Commande" default>
           ```bash
            ping ubserver
            ```
        </TabItem>
        <TabItem value="Resultat-Ping-Home" label="R√©sultat">
           ![Ping Hostname](../Assets/07/PingHostname.png)
        </TabItem>
    </Tabs>
</div><br/>

Appuyez simultan√©ment sur les touches <kbd>ctrl</kbd>+<kbd>c</kbd> pour mettre fin √† la commande `ping`. Remarquez-vous quelque chose d'√©trange dans la r√©ponse aux requ√™tes ping ? Observez l'adresse IP : 127.0.1.1

:::tip[L'adresse de boucle locale]
L'adresse IP `127.0.0.1` est ce que l'on nomme l'adresse de boucle locale (*loopback* en anglais). C'est une *fausse* adresse IP au sens o√π celle-ci renvoie vers votre propre machine. En gros, l'adresse `127.0.0.1` est un synonyme pour dire ¬´ ma propre machine ¬ª. Ceci est valable √† travers tous les syst√®mes d'exploitation. Cependant, prenez le temps d'observer de nouveau le r√©sultat de votre commande `ping`... Voyez-vous la diff√©rence ? L'adresse que l'on retrouve dans le r√©sultat est 127.0.**1.1** et non pas 127.0.**0.1**. Quelle est la diff√©rence ? La diff√©rence est assez mineure. Sous Ubuntu Serveur 127.0.0.1 signifie `localhost` et 127.0.1.1 retourne le nom d'h√¥te.
:::

Bien que votre machine poss√®de son propre nom, elle ne poss√®de pas, pour l'instant, de nom de domaine auquel elle pourrait appartenir. Pour faire une analogie, disons que le nom de domaine pourrait √™tre comparable √† votre nom de famille. Plusieurs personnes d'une m√™me famille se partagent ce nom. Cela distingue un ¬´ bob ¬ª d'un autre ¬´ bob ¬ª.

Les noms de domaines DNS (les noms de famille) sont constitu√©s d'un nom suivi d'un suffixe:
 - exemple.com
 - patate.net
 - gabriel.local
 - ti-jo.patate
    
Pour la suite de ce laboratoire, j'utiliserai le nom de domaine *gabriel.local*. Vous pouvez suivre mon exemple si vous le d√©sirez.
Je dois donc informer mon serveur que non seulement il poss√®de un nom, qu'il connait d√©j√†, mais qu'il poss√®de √©galement un nom de famille (un nom de domaine.)
Pour ce faire, je vais donc √©diter le fichier "hosts". Oui, oui, le fichier "hosts" dont on a parl√© en classe. 

√Ä l'aide d'un √©diteur de texte, je vais donc ouvrir ce fichier:

```bash title='/etc/hosts (Fichier original)' showLineNumbers
127.0.0.1 localhost
127.0.1.1 ubserver

# The following are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
```

Dans le cadre du cours, nous travaillerons en IPv4, c'est donc dans la section du haut que nous devons apporter des modifications. Dans l'encadr√© ci-dessous, vous retrouverez les modifications apport√©es √† la section du haut du fichier:

```bash title='/etc/hosts (Modification)' showLineNumbers
127.0.0.1 localhost
# highlight-next-line
127.0.1.1 ubserver.gabriel.local ubserver

# The following are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
```
Comme vous pouvez le constater, j'ai ajout√© le nom de domaine au nom de ma machine. Ensuite, j'ai entr√© un espace et j'ai √† nouveau le nom de ma machine. Cela permet de distinguer le nom complet (FQDN) et le nom d'h√¥te (hostname). Enregistrez vos modifications et quittez l'√©diteur de texte.

Validez vos modifications en entrant les commandes suivantes:

<div className="tabsborder">
    <Tabs>
        <TabItem value="HostnameCommand" label="Commande" default>
           ```bash
            hostname
            ```
        </TabItem>
        <TabItem value="ResultatHostnameCommand" label="R√©sultat">
           ![Hostname Command](../Assets/07/HostnameCommand.png)
        </TabItem>
    </Tabs>
</div><br/>

<div className="tabsborder">
    <Tabs>
        <TabItem value="HostnameFullCommand" label="Commande" default>
           ```bash
            hostname -f
            ```
        </TabItem>
        <TabItem value="ResultatHostnameFullCommand" label="R√©sultat">
           ![Hostname Full Command](../Assets/07/HostnameFullCommand.png)
        </TabItem>
    </Tabs>
</div><br/>

### Configuration du nom d'h√¥te de W10

Votre poste sous Windows 10 poss√®de √©galement un nom d'h√¥te. N√©anmoins, vous n'aurez pas le luxe de le choisir lors de l'installation contrairement √† Ubuntu Server. Windows cr√©e plut√¥t un nom g√©n√©rique lors de l'installation. Il faudra cependant le modifier pour un nom plus convivial. Pour ce faire, nous utiliserons une commande PowerShell. **Attention, cette commande provoquera un red√©marrage de votre poste**:

```Powershell
Rename-Computer -NewName "ClientW10" -Restart
```

Une fois que Windows aura red√©marr√©, validez le nouveau nom en utilisant la commande suivante:

<div className="tabsborder">
    <Tabs>
        <TabItem value="ComputerName" label="Commande" default>
           ```Powershell
            $env:computername
            ```
        </TabItem>
        <TabItem value="ResultatComputerName" label="R√©sultat">
           ![ComputerName](../Assets/07/ComputerName.png)
        </TabItem>
    </Tabs>
</div><br/>

### Configuration de l'adresse IP de W10

Pour des raisons de simplicit√©, nous allons mettre l'adresse IP de Windows 10 en mode statique. Configurez donc l'adresse IP de votre poste sous Windows 10 comme suit:

|Item|Valeur|
|----|------|
|Adresse IP|192.168.21.200|
|Masque|255.255.255.0|
|Passerelle|192.168.21.1|
|DNS|192.168.21.1|

### R√©solution d'un nom avec le fichier hosts

Notre serveur Ubuntu poss√®de d√©sormais un nom de domaine complet et une adresse IP statique, de m√™me que notre ordinateur sous Windows 10. Nous avons tous les √©l√©ments pour effectuer une premi√®re r√©solution de nom. Rappelez-vous: la premi√®re √©tape d'une r√©solution DNS ne passe pas par un serveur de nom, mais par le fichier `/etc/hosts`.

Dirigez-vous donc sur votre serveur Linux et ouvrez le fichier `/etc/hosts`, nous y ajouterons un enregistrement pour notre PC sous Windows 10.

```bash title='/etc/hosts (ajout Windows 10)' showLineNumbers
127.0.0.1 localhost
127.0.1.1 ubserver.gabriel.local ubserver
# highlight-next-line
192.168.21.200 clientw10.gabriel.local clientw10

# The following are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
```

Une fois cette ligne ajout√©e, enregistrez le fichier et quittez l'√©diteur de texte. Tentez d'envoyer une requ√™te `ping` de votre serveur Ubuntu vers votre client Windows 10 **en utilisant son nom complet, soit : clientw10.gabriel.local**

```bash
ping clientw10.gabriel.local
```

Alors ? √áa fonctionne...? √áa ne devrait pas. En effet, si vous n'avez pas pr√©alablement manipul√© les r√®gles de votre pare-feu au sein de votre client sous Windows 10, celui-ci devrait bloquer les paquets de types `ping`. Il existe d√©j√† des r√®gles au sein du pare-feu Windows qui autorise ce genre de paquet, il ne suffit que de les activer. Pour ce faire, utilisez la commande suivante:

```Powershell
Set-NetFirewallRule -Name FPS-ICMP4-ERQ-In -Enabled True
```

Retentez votre commande `ping` initiale depuis votre serveur Ubuntu:

![PingHost](../Assets/07/PingHost.png)

**<span class="green-text">√áa fonctionne! Vous avez effectu√© une premi√®re traduction.</span>**

Oui, mais ce n'est pas encore au point. Si je d√©sirais ajouter d'autres postes √† mon r√©seau, je devrais √©diter les fichiers `hosts` de toutes les machines √† chaque fois. Ce serait un travail colossal et peu efficace. üò≠ 
Nous allons donc devoir nous tourner vers quelque chose de plus efficace: un v√©ritable serveur DNS.

### Installation et configuration du service DNS

Pour faire de notre serveur Ubuntu un v√©ritable serveur DNS, il nous faudra installer quelques paquets suppl√©mentaires. Nous utiliserons l'un des services DNS tr√®s populaire sur le march√©: Bind9. Plus pr√©cis√©ment, nous installerons 3 paquets:

|Paquet|D√©finition|
|----------|--------------|
| bind9 | C'est le service DNS lui-m√™me |
| bind9utils | Ce sont des commandes suppl√©mentaires qui peuvent √™tre utiles lors de d√©bogage par exemple. |
| bind9-doc | L'ensemble de la documentation pour bind9 |

Voici donc la commande √† entrer pour installer les paquets en question:

```bash
sudo apt install bind9 bind9utils bind9-doc -y
```

D√®s son installation, Bind9 passe en mode "cache DNS". Autrement dit, il commence √† retenir les adresses IP dont il obtient la r√©solution DNS.
    
Notre objectif est √©videmment d'utiliser cette m√©moire cache qui est pr√©sente dans le serveur DNS bind9 pour optimiser la r√©solution des requ√™tes DNS sur notre r√©seau. Nous devons envoyer toutes nos requ√™tes DNS vers ce serveur dor√©navant. Sauf que‚Ä¶
    
Notre serveur DNS, lui, fera quoi avec nos requ√™tes DNS ? Comment fera-t-il pour d√©terminer quelle est l'adresse IP du site rds.ca que je tente de joindre ? La vraie r√©ponse, c'est qu'il en sera incapable‚Ä¶ (pas fort pour un DNSüò°). On va donc configurer ce que l'on nomme **un redirecteur.** Lorsque notre serveur DNS recevra une requ√™te pour un site d√©termin√©, celui-ci transf√©rera la requ√™te vers un DNS publique (ex: Google) et il attendra la r√©ponse. Lorsqu'il recevra le r√©sultat de la requ√™te, soit l'adresse IP, il stockera celle-ci dans sa m√©moire cache afin d'acc√©l√©rer le processus de la prochaine requ√™te.
    
Voici un petit sch√©ma explicatif:

<div style={{textAlign: 'center'}}>
    <ThemedImage
        alt="Sch√©ma"
        sources={{
            light: useBaseUrl('/img/Serveurs1/Labo7_Redirecteur_W.gif'),
            dark: useBaseUrl('/img/Serveurs1/Labo7_Redirecteur_D.gif'),
        }}
    />
</div>

Nous allons donc √©diter l'un des fichiers de Bind9 afin que celui-ci comprenne qu'il doit rediriger les requ√™tes dont il ne connait pas la r√©ponse. D'abord, voici le fichier original:

```yaml title='/etc/bind/named.conf.options (fichier original)' showLineNumbers
options {
    directory "/var/cache/bind";

    // if there is a firewall between you and nameservers you want
    // to talk to, you may need to fix the firewall to allow multiple
    // ports to talk. See http://www.kb.cert.org/vuls/id/800113

    // If your ISP provided one or more IP addresses for stable
    // nameservers, you probably want to use them as forwarders.
    // Uncomment the following block, and insert the addresses replacing
    // the all-0's placeholder.

    //highlight-next-line
    // forwarders {
    //highlight-next-line
    //      0.0.0.0;
    //highlight-next-line
    // };

    //=======================================================================
    // If BIND logs error messages about the root key being expired,
    // you will need to update your keys. See https://www.isc.org/bind-keys
    //=======================================================================
    dnssec-validation auto;

    listen-on-v6 { any; };
};
```

Chacune des lignes commen√ßant par ¬´ // ¬ª repr√©sente un commentaire et n'est pas prise en compte par le service. Vous remarquerez que j'ai mis en √©vidence la section qui concerne les ¬´ forwarders ¬ª ou les redirecteurs en fran√ßais. Il nous faudra donc d√©commenter ces lignes de configurations et y inscrire les adresses des serveurs DNS vers lesquels nous redirigerons nos requ√™tes. Pour le plaisir, nous utiliserons les serveurs DNS publics de Google. Apportez donc les modifications suivantes:

```yaml title='/etc/bind/named.conf.options (fichier modifi√©)' showLineNumbers
options {
    directory "/var/cache/bind";

    // if there is a firewall between you and nameservers you want
    // to talk to, you may need to fix the firewall to allow multiple
    // ports to talk. See http://www.kb.cert.org/vuls/id/800113

    // If your ISP provided one or more IP addresses for stable
    // nameservers, you probably want to use them as forwarders.
    // Uncomment the following block, and insert the addresses replacing
    // the all-0's placeholder.

    //highlight-start
    forwarders {
          8.8.8.8;
          8.8.4.4;
    };

    forward only;
    //highlight-end

    //=======================================================================
    // If BIND logs error messages about the root key being expired,
    // you will need to update your keys. See https://www.isc.org/bind-keys
    //=======================================================================
    dnssec-validation auto;

    listen-on-v6 { any; };
};
```

Une fois les modifications apport√©es et le fichier bien enregistr√©s, nous pouvons faire une v√©rification de la syntaxe pour vous assurer que vous n'avez fait aucune erreur.

```bash
sudo named-checkconf /etc/bind/named.conf.options
```

Si la commande ne retourne rien, c'est que votre fichier de configuration ne comporte aucune erreur. Bravo! ‚úî

Il ne nous reste plus qu'√† faire en sorte que le service DNS d√©marre automatiquement lorsque le serveur d√©marrer. Nous avons vu comment nous pouvions activer le d√©marrage automatique de service lors du cours de syst√®me d'exploitation. Au besoin, consulter [cette section](../../OS/Linux/08-Services.md/#activer-ou-d√©sactiver-le-d√©marrage-automatique). 

:::tip
Le nom du service est *named* et non Bind üòâ
:::

D√©marrez d√®s maintenant le service manuellement et v√©rifiez-en le statut.

### Modification de l'adresse DNS sous W10

Nous y voil√†, nous allons tester le bon fonctionnement de votre tout nouveau serveur DNS. Allez modifiez la configuration IP de votre client sous Windows 10 pour lui configurer l'adresse de votre serveur Ubuntu en tant que DNS, **soit 192.168.21.10** si vous avez suivi ma recommandation au d√©but de ce laboratoire. Une fois la nouvelle adresse du serveur DNS configur√©, appliquez les modifications et tentez de naviguer sur le web avec votre poste de travail. Alors ? √áa fonctionne ?