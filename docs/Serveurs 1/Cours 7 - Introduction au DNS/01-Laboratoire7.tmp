import useBaseUrl from '@docusaurus/useBaseUrl';
import ThemedImage from '@theme/ThemedImage';
import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

# Laboratoire 7
* * *
## Installation d'un premier serveur DNS

## Pr√©alable(s)

- Avoir compl√©t√© le laboratoire # 6

## Objectif(s)
- Installer et configurer un premier serveur DNS.
- Interroger un serveur DNS.

* * *
## Sch√©ma

<ThemedImage
    alt="Sch√©ma"
    sources={{
        light: useBaseUrl('/img/Serveurs1/Laboratoire7_W.svg'),
        dark: useBaseUrl('/img/Serveurs1/Laboratoire7_D.svg'),
    }}
/>

* * *

## √âtapes de r√©alisation

Tel que nous en avons discut√© en classe, le DNS est un syst√®me permettant de traduire les adresses IP en nom, vice-versa. Dans ce laboratoire et les suivants, vous aurez l'occasion d'exp√©rimenter la mise en place de serveurs DNS et d'observer leur comportement dans diff√©rentes situations.

### Mise en place du sch√©ma

Mettez en place le sch√©ma du r√©seau pr√©sent√© ci-dessus. Assurez-vous que le client sous Windows 10 et que le serveur Ubuntu poss√®dent un acc√®s internet via votre passerelle. Au besoin, faites les mises √† jour sur le serveur Ubuntu.

### Configuration de l'adresse IP d'Ubuntu

Dans les cours pr√©c√©dents, nous avons √©tudi√© comment configurer une adresse IP statique sous Ubuntu Server. Comme il s'agit d'un serveur √©galement dans ce laboratoire, assurez-vous de configurer une adresse IP statique au serveur Ubuntu. 

**Recommandation: 192.168.21.10**

### Configuration du nom d'h√¥te d'Ubuntu

Le nom d'h√¥te est tout simplement le nom que l'on donne √† un ordinateur ou un serveur. Par d√©faut, tout ordinateur (sous Windows ou sous Linux) en poss√®de un qui a √©t√© attitr√© √† l'installation. Dans la version serveur d'Ubuntu, on peut retrouver le nom d'h√¥te situ√© apr√®s le caract√®re ¬´ @ ¬ª dans la ligne de commande:

![Nom d'h√¥te](../Assets/07/hostname.png)

Entrez la commande `ping` suivie du nom de votre ordinateur:

<div className="tabsborder">
    <Tabs>
        <TabItem value="Ping-Home" label="Commande" default>
           ```bash
            ping ubserver
            ```
        </TabItem>
        <TabItem value="Resultat-Ping-Home" label="R√©sultat">
           ![Ping Hostname](../Assets/07/PingHostname.png)
        </TabItem>
    </Tabs>
</div><br/>

Appuyez simultan√©ment sur les touches <kbd>ctrl</kbd>+<kbd>c</kbd> pour mettre fin √† la commande `ping`. Remarquez-vous quelque chose d'√©trange dans la r√©ponse aux requ√™tes ping ? Observez l'adresse IP : 127.0.1.1

:::tip[L'adresse de boucle locale]
L'adresse IP `127.0.0.1` est ce que l'on nomme l'adresse de boucle locale (*loopback* en anglais). C'est une *fausse* adresse IP au sens o√π celle-ci renvoie vers votre propre machine. En gros, l'adresse `127.0.0.1` est un synonyme pour dire ¬´ ma propre machine ¬ª. Ceci est valable √† travers tous les syst√®mes d'exploitation. Cependant, prenez le temps d'observer de nouveau le r√©sultat de votre commande `ping`... Voyez-vous la diff√©rence ? L'adresse que l'on retrouve dans le r√©sultat est 127.0.**1.1** et non pas 127.0.**0.1**. Quelle est la diff√©rence ? La diff√©rence est assez mineure. Sous Ubuntu Serveur 127.0.0.1 signifie `localhost` et 127.0.1.1 retourne le nom d'h√¥te.
:::

Bien que votre machine poss√®de son propre nom, elle ne poss√®de pas, pour l'instant, de nom de domaine auquel elle pourrait appartenir. Pour faire une analogie, disons que le nom de domaine pourrait √™tre comparable √† votre nom de famille. Plusieurs personnes d'une m√™me famille se partagent ce nom. Cela distingue un ¬´ bob ¬ª d'un autre ¬´ bob ¬ª.

Les noms de domaines DNS (les noms de famille) sont constitu√©s d'un nom suivi d'un suffixe:
 - exemple.com
 - patate.net
 - gabriel.local
 - ti-jo.patate
    
Pour la suite de ce laboratoire, j'utiliserai le nom de domaine *gabriel.local*. Vous pouvez suivre mon exemple si vous le d√©sirez.
Je dois donc informer mon serveur que non seulement il poss√®de un nom, qu'il connait d√©j√†, mais qu'il poss√®de √©galement un nom de famille (un nom de domaine.)
Pour ce faire, je vais donc √©diter le fichier "hosts". Oui, oui, le fichier "hosts" dont on a parl√© en classe. 

√Ä l'aide d'un √©diteur de texte, je vais donc ouvrir ce fichier:

```bash title='/etc/hosts (Fichier original)' showLineNumbers
127.0.0.1 localhost
127.0.1.1 ubserver

# The following are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
```

Dans le cadre du cours, nous travaillerons en IPv4, c'est donc dans la section du haut que nous devons apporter des modifications. Dans l'encadr√© ci-dessous, vous retrouverez les modifications apport√©es √† la section du haut du fichier:

```bash title='/etc/hosts (Modification)' showLineNumbers
127.0.0.1 localhost
# highlight-next-line
127.0.1.1 ubserver.gabriel.local ubserver

# The following are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
```
Comme vous pouvez le constater, j'ai ajout√© le nom de domaine au nom de ma machine. Ensuite, j'ai entr√© un espace et j'ai √† nouveau le nom de ma machine. Cela permet de distinguer le nom complet (FQDN) et le nom d'h√¥te (hostname). Enregistrez vos modifications et quittez l'√©diteur de texte.

Validez vos modifications en entrant les commandes suivantes:

<div className="tabsborder">
    <Tabs>
        <TabItem value="HostnameCommand" label="Commande" default>
           ```bash
            hostname
            ```
        </TabItem>
        <TabItem value="ResultatHostnameCommand" label="R√©sultat">
           ![Hostname Command](../Assets/07/HostnameCommand.png)
        </TabItem>
    </Tabs>
</div><br/>

<div className="tabsborder">
    <Tabs>
        <TabItem value="HostnameFullCommand" label="Commande" default>
           ```bash
            hostname -f
            ```
        </TabItem>
        <TabItem value="ResultatHostnameFullCommand" label="R√©sultat">
           ![Hostname Full Command](../Assets/07/HostnameFullCommand.png)
        </TabItem>
    </Tabs>
</div><br/>

### Configuration du nom d'h√¥te de W10

Votre poste sous Windows 10 poss√®de √©galement un nom d'h√¥te. N√©anmoins, vous n'aurez pas le luxe de le choisir lors de l'installation contrairement √† Ubuntu Server. Windows cr√©e plut√¥t un nom g√©n√©rique lors de l'installation. Il faudra cependant le modifier pour un nom plus convivial. Pour ce faire, nous utiliserons une commande PowerShell. **Attention, cette commande provoquera un red√©marrage de votre poste**:

```Powershell
Rename-Computer -NewName "ClientW10" -Restart
```

Une fois que Windows aura red√©marr√©, validez le nouveau nom en utilisant la commande suivante:

<div className="tabsborder">
    <Tabs>
        <TabItem value="ComputerName" label="Commande" default>
           ```Powershell
            $env:computername
            ```
        </TabItem>
        <TabItem value="ResultatComputerName" label="R√©sultat">
           ![ComputerName](../Assets/07/ComputerName.png)
        </TabItem>
    </Tabs>
</div><br/>

### Configuration de l'adresse IP de W10

Pour des raisons de simplicit√©, nous allons mettre l'adresse IP de Windows 10 en mode statique. Configurez donc l'adresse IP de votre poste sous Windows 10 avec l'adresse **192.168.21.200**

### R√©solution d'un nom avec le fichier hosts

Notre serveur Ubuntu poss√®de d√©sormais un nom de domaine complet et une adresse IP statique, de m√™me que notre ordinateur sous Windows 10. Nous avons tous les √©l√©ments pour effectuer une premi√®re r√©solution de nom. Rappelez-vous: la premi√®re √©tape d'une r√©solution DNS ne passe pas par un serveur de nom, mais par le fichier `/etc/hosts`.

Dirigez-vous donc sur votre serveur Linux et ouvrez le fichier `/etc/hosts`, nous y ajouterons un enregistrement pour notre PC sous Windows 10.

```bash title='/etc/hosts (ajout Windows 10)' showLineNumbers
127.0.0.1 localhost
127.0.1.1 ubserver.gabriel.local ubserver
# highlight-next-line
192.168.21.200 clientw10.gabriel.local clientw10

# The following are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
```

Une fois cette ligne ajout√©e, enregistrez le fichier et quittez l'√©diteur de texte. Tentez d'envoyer une requ√™te `ping` de votre serveur Ubuntu vers votre client Windows 10 **en utilisant son nom complet, soit : clientw10.gabriel.local**

```bash
ping clientw10.gabriel.local
```

Alors ? √áa fonctionne...? √áa ne devrait pas. En effet, si vous n'avez pas pr√©alablement manipul√© les r√®gles de votre pare-feu au sein de votre client sous Windows 10, celui-ci devrait bloquer les paquets de types `ping`. Il existe d√©j√† des r√®gles au sein du pare-feu Windows qui autorise ce genre de paquet, il ne suffit que de les activer. Pour ce faire, utilisez la commande suivante:

```Powershell
Set-NetFirewallRule -Name FPS-ICMP4-ERQ-In -Enabled True
```

Retentez votre commande `ping` initiale depuis votre serveur Ubuntu:

![PingHost](../Assets/07/PingHost.png)

**<span class="green-text">√áa fonctionne! Vous avez effectu√© une premi√®re traduction.</span>**

Oui, mais ce n'est pas encore au point. Si je d√©sirais ajouter d'autres postes √† mon r√©seau, je devrais √©diter les fichiers `hosts` de toutes les machines √† chaque fois. Ce serait un travail colossal et peu efficace. üò≠ 
Nous allons donc devoir nous tourner vers quelque chose de plus efficace: un v√©ritable serveur DNS.

### Installation du service DNS
